"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Command_1 = require('../Command');
var Delete = (function (_super) {
    __extends(Delete, _super);
    function Delete(table) {
        _super.call(this);
        this.statement.table = table;
        this.statement.wheres = [];
    }
    Delete.prototype.toSQL = function () {
        var parts = ['DELETE FROM', this.statement.table];
        if (this.statement.wheres.length > 0) {
            parts.push('WHERE', this.statement.wheres.join(' AND '));
        }
        return parts.join(' ');
    };
    Delete.prototype._where = function (sql) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var interpolatedSql = this.interpolateQuestionMarks(sql, args);
        this.statement.wheres.push(interpolatedSql);
        return this;
    };
    Delete.prototype.where = function (sql) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return (_a = this.clone())._where.apply(_a, [sql].concat(args));
        var _a;
    };
    Delete.prototype._whereEqual = function (hash) {
        for (var column in hash) {
            var value = hash[column];
            if (value !== undefined) {
                this.statement.wheres.push(column + ' = $' + column);
                this.parameters[column] = value;
            }
        }
        return this;
    };
    /**
    Just like Select._whereEqual, be careful with the keys.
    */
    Delete.prototype.whereEqual = function (hash) {
        return this.clone()._whereEqual(hash);
    };
    return Delete;
}(Command_1.default));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Delete;
